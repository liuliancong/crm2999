package com.callray.crm.workbench.mapper;

import com.callray.crm.workbench.domain.Clue;

import java.util.List;
import java.util.Map;

public interface ClueMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Thu Apr 06 18:01:00 CST 2023
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Thu Apr 06 18:01:00 CST 2023
     */
    int insert(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Thu Apr 06 18:01:00 CST 2023
     */
    int insertSelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Thu Apr 06 18:01:00 CST 2023
     */
    Clue selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Thu Apr 06 18:01:00 CST 2023
     */
    int updateByPrimaryKeySelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Thu Apr 06 18:01:00 CST 2023
     */
    int updateByPrimaryKey(Clue record);

    /**
     * 插入Clue
     * @param clue clue
     * @return int
     */
    int insertClue(Clue clue);

    /**
     * 根据条件来分页查询
     * @param map 条件
     * @return clueList
     */
    List<Clue> selectClueByConditionForPage(Map<String,Object> map);

    /**
     * 查询‘根据条件来分页查询’的总记录数
     * @param map
     * @return
     */
    int selectCountClueByConditionForPage(Map<String,Object> map);

    /**
     * 根据id查询clue
     * @param id id
     * @return clue
     */
    Clue selectClueById(String id);

    /**
     * 根据id更新clue
     * @param clue clue
     * @return int
     */
    int updateClueById(Clue clue);

    /**
     * 根据id删除clue
     * @param ids id数组
     * @return int
     */
    int deleteClueByIds(String[] ids);

    /**
     *
     * @param id
     * @return
     */
    Clue selectClueDetailById(String id);

    /**
     * 根据clueId删除clue
     * @param id clueId
     * @return int
     */
    int deleteClueByClueId(String id);

}